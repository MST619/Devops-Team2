name: CI for indexGame

on: 
  push:
    branches: [main]

jobs:
#   linting:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.8", "3.9", "3.10"]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install pylint
#     - name: Analysing the code with pylint
#       run: |
#         pylint `ls -R|grep .py$|xargs`
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: 3.10.0
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov
        
    - name: Checkout Own Repo
      uses: actions/checkout@v2
      with: 
        repository: MST619/Devops-Team2
    - name: Checkout Test Script
      uses: actions/checkout@v2
      with:
        repository: MST619/Devops-Team2
    - name: Linter Check with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics   
    - name: Begin Pytest
      run: |
        cd src
        pytest -s --cov -v --junitxml=report.xml
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (python-${{ matrix.python-version }}, ${{ matrix.os }})
        path: |
          test-results/*.xml
          unit-test-results.json
    - name: Sent message to Teams about Push event
      uses: ./
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK }}
    - if: ${{failure()}}       
      name: Create Issues
      uses: nashmaniac/create-issue-action@v1.1
      with:
          title: Build Failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: worflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}    

    # - name: Download Artifacts
    #   uses: actions/download-artifact@v2
    #   with:
    #     path: artifacts

    # - name: Publish Unit Test Results
    #   uses: EnricoMi/publish-unit-test-result-action@v1.24
    #   if: always()
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     files: artifacts/**/*.xml
    #     LOG_LEVEL: DEBUG
      
